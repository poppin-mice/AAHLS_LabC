-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cordiccart2pol is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (14 downto 0);
    y : IN STD_LOGIC_VECTOR (14 downto 0);
    r : OUT STD_LOGIC_VECTOR (14 downto 0);
    r_ap_vld : OUT STD_LOGIC;
    theta : OUT STD_LOGIC_VECTOR (14 downto 0);
    theta_ap_vld : OUT STD_LOGIC );
end;


architecture behav of cordiccart2pol is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cordiccart2pol_cordiccart2pol,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=6.600000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.581200,HLS_SYN_LAT=17,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=185,HLS_SYN_LUT=556,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv15_4DBC : STD_LOGIC_VECTOR (14 downto 0) := "100110110111100";
    constant ap_const_lv15_3244 : STD_LOGIC_VECTOR (14 downto 0) := "011001001000100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_fu_116_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_350 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1697_fu_136_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln1697_reg_355 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln1697_1_fu_145_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln1697_1_reg_360 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_1_reg_365 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln859_fu_254_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln859_reg_370 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln859_4_fu_276_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln859_4_reg_375 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_start : STD_LOGIC;
    signal grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_done : STD_LOGIC;
    signal grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_idle : STD_LOGIC;
    signal grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_ready : STD_LOGIC;
    signal grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_x_cordic_V_1_out : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_x_cordic_V_1_out_ap_vld : STD_LOGIC;
    signal grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_theta_out_V_out : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_theta_out_V_out_ap_vld : STD_LOGIC;
    signal grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal y_cordic_V_fu_130_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_cordic_V_fu_124_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_2_fu_170_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_3_fu_184_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_fu_198_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_1_fu_212_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_2_fu_226_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_3_fu_240_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1533_fu_180_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1533_1_fu_194_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1533_2_fu_208_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1533_3_fu_222_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1533_4_fu_236_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1533_5_fu_250_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln859_3_fu_266_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln859_1_fu_272_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln859_2_fu_260_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_282_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln56_fu_289_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln56_fu_297_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln859_fu_314_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_fu_311_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln859_2_fu_323_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln859_1_fu_317_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cordiccart2pol_cordiccart2pol_Pipeline_cordic_loop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_ln1697 : IN STD_LOGIC_VECTOR (14 downto 0);
        select_ln1697_1 : IN STD_LOGIC_VECTOR (14 downto 0);
        x_cordic_V_1_out : OUT STD_LOGIC_VECTOR (14 downto 0);
        x_cordic_V_1_out_ap_vld : OUT STD_LOGIC;
        theta_out_V_out : OUT STD_LOGIC_VECTOR (14 downto 0);
        theta_out_V_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_cordiccart2pol_Pipeline_cordic_loop_fu_106 : component cordiccart2pol_cordiccart2pol_Pipeline_cordic_loop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_start,
        ap_done => grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_done,
        ap_idle => grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_idle,
        ap_ready => grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_ready,
        select_ln1697 => select_ln1697_reg_355,
        select_ln1697_1 => select_ln1697_1_reg_360,
        x_cordic_V_1_out => grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_x_cordic_V_1_out,
        x_cordic_V_1_out_ap_vld => grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_x_cordic_V_1_out_ap_vld,
        theta_out_V_out => grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_theta_out_V_out,
        theta_out_V_out_ap_vld => grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_theta_out_V_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_ready = ap_const_logic_1)) then 
                    grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln859_4_reg_375 <= add_ln859_4_fu_276_p2;
                add_ln859_reg_370 <= add_ln859_fu_254_p2;
                r_1_reg_365 <= grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_x_cordic_V_1_out(14 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                select_ln1697_1_reg_360 <= select_ln1697_1_fu_145_p3;
                select_ln1697_reg_355 <= select_ln1697_fu_136_p3;
                tmp_reg_350 <= x(14 downto 14);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_done, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln56_fu_297_p2 <= std_logic_vector(unsigned(select_ln56_fu_289_p3) + unsigned(grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_theta_out_V_out));
    add_ln859_1_fu_317_p2 <= std_logic_vector(signed(sext_ln859_fu_314_p1) + signed(sext_ln1534_fu_311_p1));
    add_ln859_2_fu_260_p2 <= std_logic_vector(signed(sext_ln1533_2_fu_208_p1) + signed(sext_ln1533_3_fu_222_p1));
    add_ln859_3_fu_266_p2 <= std_logic_vector(signed(sext_ln1533_4_fu_236_p1) + signed(sext_ln1533_5_fu_250_p1));
    add_ln859_4_fu_276_p2 <= std_logic_vector(signed(sext_ln859_1_fu_272_p1) + signed(add_ln859_2_fu_260_p2));
    add_ln859_fu_254_p2 <= std_logic_vector(signed(sext_ln1533_fu_180_p1) + signed(sext_ln1533_1_fu_194_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_done)
    begin
        if ((grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_start <= grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_ap_start_reg;
    r <= std_logic_vector(signed(sext_ln859_2_fu_323_p1) + signed(add_ln859_1_fu_317_p2));
    r_2_fu_170_p4 <= grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_x_cordic_V_1_out(14 downto 4);
    r_3_fu_184_p4 <= grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_x_cordic_V_1_out(14 downto 5);
    r_V_1_fu_212_p4 <= grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_x_cordic_V_1_out(14 downto 8);
    r_V_2_fu_226_p4 <= grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_x_cordic_V_1_out(14 downto 10);
    r_V_3_fu_240_p4 <= grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_x_cordic_V_1_out(14 downto 11);
    r_V_fu_198_p4 <= grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_x_cordic_V_1_out(14 downto 7);

    r_ap_vld_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_ap_vld <= ap_const_logic_1;
        else 
            r_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1697_1_fu_145_p3 <= 
        x_cordic_V_fu_124_p2 when (tmp_fu_116_p3(0) = '1') else 
        x;
    select_ln1697_fu_136_p3 <= 
        y_cordic_V_fu_130_p2 when (tmp_fu_116_p3(0) = '1') else 
        y;
    select_ln56_fu_289_p3 <= 
        ap_const_lv15_4DBC when (tmp_1_fu_282_p3(0) = '1') else 
        ap_const_lv15_3244;
        sext_ln1533_1_fu_194_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_3_fu_184_p4),12));

        sext_ln1533_2_fu_208_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_198_p4),9));

        sext_ln1533_3_fu_222_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_1_fu_212_p4),9));

        sext_ln1533_4_fu_236_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_2_fu_226_p4),6));

        sext_ln1533_5_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_3_fu_240_p4),6));

        sext_ln1533_fu_180_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_2_fu_170_p4),12));

        sext_ln1534_fu_311_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_1_reg_365),15));

        sext_ln859_1_fu_272_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln859_3_fu_266_p2),9));

        sext_ln859_2_fu_323_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln859_4_reg_375),15));

        sext_ln859_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln859_reg_370),15));

    theta <= 
        add_ln56_fu_297_p2 when (tmp_reg_350(0) = '1') else 
        grp_cordiccart2pol_Pipeline_cordic_loop_fu_106_theta_out_V_out;

    theta_ap_vld_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            theta_ap_vld <= ap_const_logic_1;
        else 
            theta_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_282_p3 <= y(14 downto 14);
    tmp_fu_116_p3 <= x(14 downto 14);
    x_cordic_V_fu_124_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(x));
    y_cordic_V_fu_130_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(y));
end behav;
