

================================================================
== Vitis HLS Report for 'dut_Pipeline_VITIS_LOOP_88_5_VITIS_LOOP_89_6'
================================================================
* Date:           Sun Nov 13 23:03:24 2022

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        serialization_HLS
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  8.000 ns|        0 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     8020|     8020|  64.160 us|  64.160 us|  8020|  8020|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_88_5_VITIS_LOOP_89_6  |     8018|     8018|        20|          1|          1|  8000|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 21


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 21
* Pipeline : 1
  Pipeline-0 : II = 1, D = 21, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 23 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%dst_counter = alloca i32 1"   --->   Operation 24 'alloca' 'dst_counter' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%src_counter = alloca i32 1"   --->   Operation 25 'alloca' 'src_counter' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%counter = alloca i32 1"   --->   Operation 26 'alloca' 'counter' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%indvar_flatten98 = alloca i32 1"   --->   Operation 27 'alloca' 'indvar_flatten98' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%src_buff_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %src_buff"   --->   Operation 28 'read' 'src_buff_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%dst_buff_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %dst_buff"   --->   Operation 29 'read' 'dst_buff_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%select_ln63_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %select_ln63"   --->   Operation 30 'read' 'select_ln63_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%icmp_ln31_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %icmp_ln31"   --->   Operation 31 'read' 'icmp_ln31_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%dst_counter_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %dst_counter_1_reload"   --->   Operation 32 'read' 'dst_counter_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%select_ln63_cast = zext i7 %select_ln63_read"   --->   Operation 33 'zext' 'select_ln63_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %gmem, void @empty_21, i32 0, i32 0, void @empty_22, i32 0, i32 120000, void @empty, void @empty_0, void @empty_22, i32 16, i32 16, i32 16, i32 16, void @empty_22, void @empty_22, i32 4294967295, i32 0"   --->   Operation 34 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (1.58ns)   --->   "%store_ln0 = store i13 0, i13 %indvar_flatten98"   --->   Operation 35 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 36 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %counter"   --->   Operation 36 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 37 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 11, i32 %src_counter"   --->   Operation 37 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 38 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %dst_counter_1_reload_read, i32 %dst_counter"   --->   Operation 38 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 39 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %j"   --->   Operation 39 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body97"   --->   Operation 40 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.91>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%indvar_flatten98_load = load i13 %indvar_flatten98" [top.cpp:88]   --->   Operation 41 'load' 'indvar_flatten98_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %gmem"   --->   Operation 42 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 43 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (2.09ns)   --->   "%icmp_ln88 = icmp_eq  i13 %indvar_flatten98_load, i13 8000" [top.cpp:88]   --->   Operation 44 'icmp' 'icmp_ln88' <Predicate = true> <Delay = 2.09> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (1.67ns)   --->   "%add_ln88 = add i13 %indvar_flatten98_load, i13 1" [top.cpp:88]   --->   Operation 45 'add' 'add_ln88' <Predicate = true> <Delay = 1.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln88 = br i1 %icmp_ln88, void %for.inc133, void %for.body145.preheader.exitStub" [top.cpp:88]   --->   Operation 46 'br' 'br_ln88' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%j_load = load i4 %j" [top.cpp:89]   --->   Operation 47 'load' 'j_load' <Predicate = (!icmp_ln88)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.30ns)   --->   "%icmp_ln89 = icmp_eq  i4 %j_load, i4 8" [top.cpp:89]   --->   Operation 48 'icmp' 'icmp_ln89' <Predicate = (!icmp_ln88)> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (1.02ns)   --->   "%select_ln88 = select i1 %icmp_ln89, i4 0, i4 %j_load" [top.cpp:88]   --->   Operation 49 'select' 'select_ln88' <Predicate = (!icmp_ln88)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (1.30ns)   --->   "%icmp_ln90 = icmp_eq  i4 %select_ln88, i4 0" [top.cpp:90]   --->   Operation 50 'icmp' 'icmp_ln90' <Predicate = (!icmp_ln88)> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (1.58ns)   --->   "%br_ln90 = br i1 %icmp_ln90, void %if.end111_ifconv, void %if.then99" [top.cpp:90]   --->   Operation 51 'br' 'br_ln90' <Predicate = (!icmp_ln88)> <Delay = 1.58>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%counter_load = load i32 %counter" [top.cpp:105]   --->   Operation 52 'load' 'counter_load' <Predicate = (!icmp_ln88)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (1.30ns)   --->   "%icmp_ln95 = icmp_eq  i4 %select_ln88, i4 7" [top.cpp:95]   --->   Operation 53 'icmp' 'icmp_ln95' <Predicate = (!icmp_ln88)> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln97 = zext i32 %counter_load" [top.cpp:97]   --->   Operation 54 'zext' 'zext_ln97' <Predicate = (!icmp_ln88 & icmp_ln31_read)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%skip_row_arr_addr = getelementptr i32 %skip_row_arr, i64 0, i64 %zext_ln97" [top.cpp:97]   --->   Operation 55 'getelementptr' 'skip_row_arr_addr' <Predicate = (!icmp_ln88 & icmp_ln31_read)> <Delay = 0.00>
ST_2 : Operation 56 [2/2] (3.25ns)   --->   "%skip_row_arr_load = load i10 %skip_row_arr_addr" [top.cpp:97]   --->   Operation 56 'load' 'skip_row_arr_load' <Predicate = (!icmp_ln88 & icmp_ln31_read)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>
ST_2 : Operation 57 [1/1] (2.55ns)   --->   "%counter_2 = add i32 %counter_load, i32 1" [top.cpp:105]   --->   Operation 57 'add' 'counter_2' <Predicate = (!icmp_ln88)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.69ns)   --->   "%counter_3 = select i1 %icmp_ln95, i32 %counter_2, i32 %counter_load" [top.cpp:95]   --->   Operation 58 'select' 'counter_3' <Predicate = (!icmp_ln88)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (1.73ns)   --->   "%j_1 = add i4 %select_ln88, i4 1" [top.cpp:89]   --->   Operation 59 'add' 'j_1' <Predicate = (!icmp_ln88)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (1.58ns)   --->   "%store_ln89 = store i13 %add_ln88, i13 %indvar_flatten98" [top.cpp:89]   --->   Operation 60 'store' 'store_ln89' <Predicate = (!icmp_ln88)> <Delay = 1.58>
ST_2 : Operation 61 [1/1] (1.58ns)   --->   "%store_ln89 = store i32 %counter_3, i32 %counter" [top.cpp:89]   --->   Operation 61 'store' 'store_ln89' <Predicate = (!icmp_ln88)> <Delay = 1.58>
ST_2 : Operation 62 [1/1] (1.58ns)   --->   "%store_ln89 = store i4 %j_1, i4 %j" [top.cpp:89]   --->   Operation 62 'store' 'store_ln89' <Predicate = (!icmp_ln88)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 63 [1/2] (3.25ns)   --->   "%skip_row_arr_load = load i10 %skip_row_arr_addr" [top.cpp:97]   --->   Operation 63 'load' 'skip_row_arr_load' <Predicate = (icmp_ln31_read)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1000> <RAM>

State 4 <SV = 3> <Delay = 6.91>
ST_4 : Operation 64 [2/2] (6.91ns)   --->   "%mul_ln97 = mul i32 %skip_row_arr_load, i32 11" [top.cpp:97]   --->   Operation 64 'mul' 'mul_ln97' <Predicate = (icmp_ln95 & icmp_ln31_read)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.91>
ST_5 : Operation 65 [1/2] (6.91ns)   --->   "%mul_ln97 = mul i32 %skip_row_arr_load, i32 11" [top.cpp:97]   --->   Operation 65 'mul' 'mul_ln97' <Predicate = (icmp_ln95 & icmp_ln31_read)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 7.39>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%src_counter_load = load i32 %src_counter" [top.cpp:91]   --->   Operation 66 'load' 'src_counter_load' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (2.55ns)   --->   "%add_ln91_2 = add i32 %src_counter_load, i32 10" [top.cpp:91]   --->   Operation 67 'add' 'add_ln91_2' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln91_1 = zext i32 %add_ln91_2" [top.cpp:91]   --->   Operation 68 'zext' 'zext_ln91_1' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 0.00>
ST_6 : Operation 69 [1/1] (3.52ns)   --->   "%add_ln91_3 = add i64 %zext_ln91_1, i64 %src_buff_read" [top.cpp:91]   --->   Operation 69 'add' 'add_ln91_3' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i8 %gmem, i64 %add_ln91_3" [top.cpp:91]   --->   Operation 70 'getelementptr' 'gmem_addr_1' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 0.00>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "%src_counter_load_1 = load i32 %src_counter" [top.cpp:97]   --->   Operation 71 'load' 'src_counter_load_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (2.55ns)   --->   "%src_counter_2 = add i32 %mul_ln97, i32 %src_counter_load_1" [top.cpp:97]   --->   Operation 72 'add' 'src_counter_2' <Predicate = (icmp_ln95 & icmp_ln31_read)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node src_counter_4)   --->   "%src_counter_3 = select i1 %icmp_ln31_read, i32 %src_counter_2, i32 %src_counter_load_1" [top.cpp:31]   --->   Operation 73 'select' 'src_counter_3' <Predicate = (icmp_ln95)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (2.55ns) (out node of the LUT)   --->   "%src_counter_4 = add i32 %src_counter_3, i32 %select_ln63_cast" [top.cpp:99]   --->   Operation 74 'add' 'src_counter_4' <Predicate = (icmp_ln95)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 75 [1/1] (0.69ns)   --->   "%src_counter_5 = select i1 %icmp_ln95, i32 %src_counter_4, i32 %src_counter_load_1" [top.cpp:95]   --->   Operation 75 'select' 'src_counter_5' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 76 [1/1] (1.58ns)   --->   "%store_ln89 = store i32 %src_counter_5, i32 %src_counter" [top.cpp:89]   --->   Operation 76 'store' 'store_ln89' <Predicate = true> <Delay = 1.58>

State 7 <SV = 6> <Delay = 8.00>
ST_7 : Operation 77 [7/7] (8.00ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:91]   --->   Operation 77 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.00>
ST_8 : Operation 78 [6/7] (8.00ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:91]   --->   Operation 78 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.00>
ST_9 : Operation 79 [5/7] (8.00ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:91]   --->   Operation 79 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.00>
ST_10 : Operation 80 [4/7] (8.00ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:91]   --->   Operation 80 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.00>
ST_11 : Operation 81 [3/7] (8.00ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:91]   --->   Operation 81 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.00>
ST_12 : Operation 82 [2/7] (8.00ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:91]   --->   Operation 82 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.00>
ST_13 : Operation 83 [1/7] (8.00ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:91]   --->   Operation 83 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.00>
ST_14 : Operation 84 [1/1] (0.00ns)   --->   "%dst_counter_load_1 = load i32 %dst_counter" [top.cpp:91]   --->   Operation 84 'load' 'dst_counter_load_1' <Predicate = (!icmp_ln88)> <Delay = 0.00>
ST_14 : Operation 85 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_88_5_VITIS_LOOP_89_6_str"   --->   Operation 85 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln88)> <Delay = 0.00>
ST_14 : Operation 86 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 8000, i64 8000, i64 8000"   --->   Operation 86 'speclooptripcount' 'empty' <Predicate = (!icmp_ln88)> <Delay = 0.00>
ST_14 : Operation 87 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 87 'specpipeline' 'specpipeline_ln0' <Predicate = (!icmp_ln88)> <Delay = 0.00>
ST_14 : Operation 88 [1/1] (0.00ns)   --->   "%j_1_cast = zext i4 %select_ln88" [top.cpp:88]   --->   Operation 88 'zext' 'j_1_cast' <Predicate = (!icmp_ln88)> <Delay = 0.00>
ST_14 : Operation 89 [1/1] (0.00ns)   --->   "%specloopname_ln89 = specloopname void @_ssdm_op_SpecLoopName, void @empty_17" [top.cpp:89]   --->   Operation 89 'specloopname' 'specloopname_ln89' <Predicate = (!icmp_ln88)> <Delay = 0.00>
ST_14 : Operation 90 [1/1] (2.55ns)   --->   "%add_ln91 = add i32 %j_1_cast, i32 %dst_counter_load_1" [top.cpp:91]   --->   Operation 90 'add' 'add_ln91' <Predicate = (!icmp_ln88)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln91 = zext i32 %add_ln91" [top.cpp:91]   --->   Operation 91 'zext' 'zext_ln91' <Predicate = (!icmp_ln88)> <Delay = 0.00>
ST_14 : Operation 92 [1/1] (3.52ns)   --->   "%add_ln91_1 = add i64 %zext_ln91, i64 %dst_buff_read" [top.cpp:91]   --->   Operation 92 'add' 'add_ln91_1' <Predicate = (!icmp_ln88)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 93 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i8 %gmem, i64 %add_ln91_1" [top.cpp:93]   --->   Operation 93 'getelementptr' 'gmem_addr' <Predicate = (!icmp_ln88)> <Delay = 0.00>
ST_14 : Operation 94 [1/1] (8.00ns)   --->   "%gmem_addr_1_read = read i8 @_ssdm_op_Read.m_axi.i8P1A, i8 %gmem_addr_1" [top.cpp:91]   --->   Operation 94 'read' 'gmem_addr_1_read' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 95 [1/1] (0.00ns)   --->   "%dst_counter_load_2 = load i32 %dst_counter" [top.cpp:104]   --->   Operation 95 'load' 'dst_counter_load_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 96 [1/1] (2.55ns)   --->   "%dst_counter_2 = add i32 %dst_counter_load_2, i32 8" [top.cpp:104]   --->   Operation 96 'add' 'dst_counter_2' <Predicate = (icmp_ln95)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 97 [1/1] (0.69ns)   --->   "%dst_counter_3 = select i1 %icmp_ln95, i32 %dst_counter_2, i32 %dst_counter_load_2" [top.cpp:95]   --->   Operation 97 'select' 'dst_counter_3' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 98 [1/1] (1.58ns)   --->   "%store_ln89 = store i32 %dst_counter_3, i32 %dst_counter" [top.cpp:89]   --->   Operation 98 'store' 'store_ln89' <Predicate = true> <Delay = 1.58>

State 15 <SV = 14> <Delay = 8.00>
ST_15 : Operation 99 [1/1] (1.58ns)   --->   "%br_ln92 = br void %if.end111_ifconv" [top.cpp:92]   --->   Operation 99 'br' 'br_ln92' <Predicate = (!icmp_ln88 & icmp_ln90)> <Delay = 1.58>
ST_15 : Operation 100 [1/1] (8.00ns)   --->   "%gmem_addr_4_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i8P1A, i8 %gmem_addr, i32 1" [top.cpp:93]   --->   Operation 100 'writereq' 'gmem_addr_4_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 8.00>
ST_16 : Operation 101 [1/1] (0.00ns)   --->   "%storemerge = phi i8 %gmem_addr_1_read, void %if.then99, i8 0, void %for.inc133" [top.cpp:91]   --->   Operation 101 'phi' 'storemerge' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 102 [1/1] (8.00ns)   --->   "%write_ln93 = write void @_ssdm_op_Write.m_axi.i8P1A, i8 %gmem_addr, i8 %storemerge, i1 1" [top.cpp:93]   --->   Operation 102 'write' 'write_ln93' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.00>
ST_17 : Operation 103 [5/5] (8.00ns)   --->   "%gmem_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr" [top.cpp:93]   --->   Operation 103 'writeresp' 'gmem_addr_4_resp' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 8.00>
ST_18 : Operation 104 [4/5] (8.00ns)   --->   "%gmem_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr" [top.cpp:93]   --->   Operation 104 'writeresp' 'gmem_addr_4_resp' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 8.00>
ST_19 : Operation 105 [3/5] (8.00ns)   --->   "%gmem_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr" [top.cpp:93]   --->   Operation 105 'writeresp' 'gmem_addr_4_resp' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 8.00>
ST_20 : Operation 106 [2/5] (8.00ns)   --->   "%gmem_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr" [top.cpp:93]   --->   Operation 106 'writeresp' 'gmem_addr_4_resp' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 109 [1/1] (0.00ns)   --->   "%dst_counter_load = load i32 %dst_counter"   --->   Operation 109 'load' 'dst_counter_load' <Predicate = (icmp_ln88)> <Delay = 0.00>
ST_20 : Operation 110 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %dst_counter_4_out, i32 %dst_counter_load"   --->   Operation 110 'write' 'write_ln0' <Predicate = (icmp_ln88)> <Delay = 0.00>
ST_20 : Operation 111 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 111 'ret' 'ret_ln0' <Predicate = (icmp_ln88)> <Delay = 0.00>

State 21 <SV = 20> <Delay = 8.00>
ST_21 : Operation 107 [1/5] (8.00ns)   --->   "%gmem_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %gmem_addr" [top.cpp:93]   --->   Operation 107 'writeresp' 'gmem_addr_4_resp' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 108 [1/1] (0.00ns)   --->   "%br_ln89 = br void %for.body97" [top.cpp:89]   --->   Operation 108 'br' 'br_ln89' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 0ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten98') [13]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'indvar_flatten98' [21]  (1.59 ns)

 <State 2>: 5.91ns
The critical path consists of the following:
	'load' operation ('j_load', top.cpp:89) on local variable 'j' [35]  (0 ns)
	'icmp' operation ('icmp_ln89', top.cpp:89) [39]  (1.3 ns)
	'select' operation ('select_ln88', top.cpp:88) [40]  (1.02 ns)
	'icmp' operation ('icmp_ln95', top.cpp:95) [67]  (1.3 ns)
	'select' operation ('counter', top.cpp:95) [79]  (0.698 ns)
	'store' operation ('store_ln89', top.cpp:89) of variable 'counter', top.cpp:95 on local variable 'counter' [82]  (1.59 ns)

 <State 3>: 3.25ns
The critical path consists of the following:
	'load' operation ('skip_row_arr_load', top.cpp:97) on array 'skip_row_arr' [70]  (3.25 ns)

 <State 4>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln97', top.cpp:97) [71]  (6.91 ns)

 <State 5>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln97', top.cpp:97) [71]  (6.91 ns)

 <State 6>: 7.39ns
The critical path consists of the following:
	'load' operation ('src_counter_load_1', top.cpp:97) on local variable 'src_counter' [62]  (0 ns)
	'add' operation ('src_counter', top.cpp:97) [72]  (2.55 ns)
	'select' operation ('src_counter', top.cpp:31) [73]  (0 ns)
	'add' operation ('src_counter', top.cpp:99) [74]  (2.55 ns)
	'select' operation ('src_counter', top.cpp:95) [78]  (0.698 ns)
	'store' operation ('store_ln89', top.cpp:89) of variable 'src_counter', top.cpp:95 on local variable 'src_counter' [83]  (1.59 ns)

 <State 7>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', top.cpp:91) on port 'gmem' (top.cpp:91) [56]  (8 ns)

 <State 8>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', top.cpp:91) on port 'gmem' (top.cpp:91) [56]  (8 ns)

 <State 9>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', top.cpp:91) on port 'gmem' (top.cpp:91) [56]  (8 ns)

 <State 10>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', top.cpp:91) on port 'gmem' (top.cpp:91) [56]  (8 ns)

 <State 11>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', top.cpp:91) on port 'gmem' (top.cpp:91) [56]  (8 ns)

 <State 12>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', top.cpp:91) on port 'gmem' (top.cpp:91) [56]  (8 ns)

 <State 13>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', top.cpp:91) on port 'gmem' (top.cpp:91) [56]  (8 ns)

 <State 14>: 8ns
The critical path consists of the following:
	bus read operation ('gmem_addr_1_read', top.cpp:91) on port 'gmem' (top.cpp:91) [57]  (8 ns)

 <State 15>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_addr_4_req', top.cpp:93) on port 'gmem' (top.cpp:93) [64]  (8 ns)

 <State 16>: 8ns
The critical path consists of the following:
	'phi' operation ('storemerge', top.cpp:91) with incoming values : ('gmem_addr_1_read', top.cpp:91) [60]  (0 ns)
	bus write operation ('write_ln93', top.cpp:93) on port 'gmem' (top.cpp:93) [65]  (8 ns)

 <State 17>: 8ns
The critical path consists of the following:
	bus response operation ('gmem_addr_4_resp', top.cpp:93) on port 'gmem' (top.cpp:93) [66]  (8 ns)

 <State 18>: 8ns
The critical path consists of the following:
	bus response operation ('gmem_addr_4_resp', top.cpp:93) on port 'gmem' (top.cpp:93) [66]  (8 ns)

 <State 19>: 8ns
The critical path consists of the following:
	bus response operation ('gmem_addr_4_resp', top.cpp:93) on port 'gmem' (top.cpp:93) [66]  (8 ns)

 <State 20>: 8ns
The critical path consists of the following:
	bus response operation ('gmem_addr_4_resp', top.cpp:93) on port 'gmem' (top.cpp:93) [66]  (8 ns)

 <State 21>: 8ns
The critical path consists of the following:
	bus response operation ('gmem_addr_4_resp', top.cpp:93) on port 'gmem' (top.cpp:93) [66]  (8 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
