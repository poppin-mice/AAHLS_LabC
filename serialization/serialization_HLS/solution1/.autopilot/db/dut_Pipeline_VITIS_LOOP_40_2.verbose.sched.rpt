

================================================================
== Vitis HLS Report for 'dut_Pipeline_VITIS_LOOP_40_2'
================================================================
* Date:           Sun Nov 13 23:03:24 2022

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        serialization_HLS
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  8.000 ns|        0 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_40_2  |        ?|        ?|        19|         10|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 10, depth = 19


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 19
* Pipeline : 1
  Pipeline-0 : II = 10, D = 19, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.07>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%skip_row = alloca i32 1"   --->   Operation 22 'alloca' 'skip_row' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%src_counter_1 = alloca i32 1"   --->   Operation 23 'alloca' 'src_counter_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%total_length = alloca i32 1"   --->   Operation 24 'alloca' 'total_length' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%select_ln50_read = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %select_ln50"   --->   Operation 25 'read' 'select_ln50_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%src_buff_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %src_buff"   --->   Operation 26 'read' 'src_buff_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%src_counter_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %src_counter"   --->   Operation 27 'read' 'src_counter_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%select_ln50_cast = zext i3 %select_ln50_read"   --->   Operation 28 'zext' 'select_ln50_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %gmem, void @empty_21, i32 0, i32 0, void @empty_22, i32 0, i32 120000, void @empty, void @empty_0, void @empty_22, i32 16, i32 16, i32 16, i32 16, void @empty_22, void @empty_22, i32 4294967295, i32 0"   --->   Operation 29 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %total_length"   --->   Operation 30 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 31 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %src_counter_read, i32 %src_counter_1"   --->   Operation 31 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 32 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %skip_row"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln0 = br void %while.cond"   --->   Operation 33 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%src_counter_9 = load i32 %src_counter_1" [top.cpp:44]   --->   Operation 34 'load' 'src_counter_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (2.55ns)   --->   "%add_ln40 = add i32 %src_counter_9, i32 2" [top.cpp:40]   --->   Operation 35 'add' 'add_ln40' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln40 = zext i32 %add_ln40" [top.cpp:40]   --->   Operation 36 'zext' 'zext_ln40' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (3.52ns)   --->   "%add_ln40_1 = add i64 %zext_ln40, i64 %src_buff_read" [top.cpp:40]   --->   Operation 37 'add' 'add_ln40_1' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i8 %gmem, i64 %add_ln40_1" [top.cpp:40]   --->   Operation 38 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 8.00>
ST_2 : Operation 39 [7/7] (8.00ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr, i32 1" [top.cpp:40]   --->   Operation 39 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.00>
ST_3 : Operation 40 [6/7] (8.00ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr, i32 1" [top.cpp:40]   --->   Operation 40 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.00>
ST_4 : Operation 41 [5/7] (8.00ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr, i32 1" [top.cpp:40]   --->   Operation 41 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.00>
ST_5 : Operation 42 [4/7] (8.00ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr, i32 1" [top.cpp:40]   --->   Operation 42 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.00>
ST_6 : Operation 43 [3/7] (8.00ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr, i32 1" [top.cpp:40]   --->   Operation 43 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.00>
ST_7 : Operation 44 [2/7] (8.00ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr, i32 1" [top.cpp:40]   --->   Operation 44 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.00>
ST_8 : Operation 45 [1/7] (8.00ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr, i32 1" [top.cpp:40]   --->   Operation 45 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.00>
ST_9 : Operation 46 [1/1] (8.00ns)   --->   "%gmem_addr_read = read i8 @_ssdm_op_Read.m_axi.i8P1A, i8 %gmem_addr" [top.cpp:40]   --->   Operation 46 'read' 'gmem_addr_read' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 4.14>
ST_10 : Operation 47 [1/1] (0.00ns)   --->   "%skip_row_1 = load i32 %skip_row" [top.cpp:45]   --->   Operation 47 'load' 'skip_row_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 48 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %gmem"   --->   Operation 48 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 49 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 49 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 50 [1/1] (1.55ns)   --->   "%icmp_ln40 = icmp_eq  i8 %gmem_addr_read, i8 %select_ln50_cast" [top.cpp:40]   --->   Operation 50 'icmp' 'icmp_ln40' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 51 [1/1] (2.55ns)   --->   "%skip_row_2 = add i32 %skip_row_1, i32 1" [top.cpp:45]   --->   Operation 51 'add' 'skip_row_2' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln40 = br i1 %icmp_ln40, void %while.end.exitStub, void %while.body" [top.cpp:40]   --->   Operation 52 'br' 'br_ln40' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i32 %src_counter_9" [top.cpp:42]   --->   Operation 53 'zext' 'zext_ln42' <Predicate = (icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 54 [1/1] (3.52ns)   --->   "%add_ln42 = add i64 %zext_ln42, i64 %src_buff_read" [top.cpp:42]   --->   Operation 54 'add' 'add_ln42' <Predicate = (icmp_ln40)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 55 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i8 %gmem, i64 %add_ln42" [top.cpp:42]   --->   Operation 55 'getelementptr' 'gmem_addr_1' <Predicate = (icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 56 [1/1] (2.55ns)   --->   "%src_counter_10 = add i32 %src_counter_9, i32 11" [top.cpp:44]   --->   Operation 56 'add' 'src_counter_10' <Predicate = (icmp_ln40)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 57 [1/1] (1.58ns)   --->   "%store_ln40 = store i32 %src_counter_10, i32 %src_counter_1" [top.cpp:40]   --->   Operation 57 'store' 'store_ln40' <Predicate = (icmp_ln40)> <Delay = 1.58>
ST_10 : Operation 58 [1/1] (1.58ns)   --->   "%store_ln40 = store i32 %skip_row_2, i32 %skip_row" [top.cpp:40]   --->   Operation 58 'store' 'store_ln40' <Predicate = (icmp_ln40)> <Delay = 1.58>
ST_10 : Operation 74 [1/1] (0.00ns)   --->   "%total_length_load_1 = load i32 %total_length"   --->   Operation 74 'load' 'total_length_load_1' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 75 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %total_length_out, i32 %total_length_load_1"   --->   Operation 75 'write' 'write_ln0' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 76 [1/1] (0.00ns)   --->   "%write_ln44 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %src_counter_1_out, i32 %src_counter_9" [top.cpp:44]   --->   Operation 76 'write' 'write_ln44' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 77 [1/1] (0.00ns)   --->   "%write_ln45 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %skip_row_out, i32 %skip_row_1" [top.cpp:45]   --->   Operation 77 'write' 'write_ln45' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 78 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 78 'ret' 'ret_ln0' <Predicate = (!icmp_ln40)> <Delay = 0.00>

State 11 <SV = 10> <Delay = 8.00>
ST_11 : Operation 59 [7/7] (8.00ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:42]   --->   Operation 59 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.00>
ST_12 : Operation 60 [6/7] (8.00ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:42]   --->   Operation 60 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.00>
ST_13 : Operation 61 [5/7] (8.00ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:42]   --->   Operation 61 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.00>
ST_14 : Operation 62 [4/7] (8.00ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:42]   --->   Operation 62 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.00>
ST_15 : Operation 63 [3/7] (8.00ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:42]   --->   Operation 63 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 8.00>
ST_16 : Operation 64 [2/7] (8.00ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:42]   --->   Operation 64 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.00>
ST_17 : Operation 65 [1/7] (8.00ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i8P1A, i8 %gmem_addr_1, i32 1" [top.cpp:42]   --->   Operation 65 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 8.00>
ST_18 : Operation 66 [1/1] (8.00ns)   --->   "%gmem_addr_1_read = read i8 @_ssdm_op_Read.m_axi.i8P1A, i8 %gmem_addr_1" [top.cpp:42]   --->   Operation 66 'read' 'gmem_addr_1_read' <Predicate = true> <Delay = 8.00> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 67 [1/1] (0.00ns)   --->   "%type_valid = trunc i8 %gmem_addr_1_read" [top.cpp:42]   --->   Operation 67 'trunc' 'type_valid' <Predicate = true> <Delay = 0.00>

State 19 <SV = 18> <Delay = 4.14>
ST_19 : Operation 68 [1/1] (0.00ns)   --->   "%total_length_load = load i32 %total_length" [top.cpp:43]   --->   Operation 68 'load' 'total_length_load' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 69 [1/1] (0.00ns)   --->   "%specloopname_ln42 = specloopname void @_ssdm_op_SpecLoopName, void @empty_19" [top.cpp:42]   --->   Operation 69 'specloopname' 'specloopname_ln42' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln42_1 = zext i4 %type_valid" [top.cpp:42]   --->   Operation 70 'zext' 'zext_ln42_1' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 71 [1/1] (2.55ns)   --->   "%total_length_1 = add i32 %zext_ln42_1, i32 %total_length_load" [top.cpp:43]   --->   Operation 71 'add' 'total_length_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 72 [1/1] (1.58ns)   --->   "%store_ln40 = store i32 %total_length_1, i32 %total_length" [top.cpp:40]   --->   Operation 72 'store' 'store_ln40' <Predicate = true> <Delay = 1.58>
ST_19 : Operation 73 [1/1] (0.00ns)   --->   "%br_ln40 = br void %while.cond" [top.cpp:40]   --->   Operation 73 'br' 'br_ln40' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 0ns.

 <State 1>: 6.07ns
The critical path consists of the following:
	'alloca' operation ('src_counter') [9]  (0 ns)
	'load' operation ('src_counter', top.cpp:44) on local variable 'src_counter' [22]  (0 ns)
	'add' operation ('add_ln40', top.cpp:40) [25]  (2.55 ns)
	'add' operation ('add_ln40_1', top.cpp:40) [27]  (3.52 ns)

 <State 2>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', top.cpp:40) on port 'gmem' (top.cpp:40) [29]  (8 ns)

 <State 3>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', top.cpp:40) on port 'gmem' (top.cpp:40) [29]  (8 ns)

 <State 4>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', top.cpp:40) on port 'gmem' (top.cpp:40) [29]  (8 ns)

 <State 5>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', top.cpp:40) on port 'gmem' (top.cpp:40) [29]  (8 ns)

 <State 6>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', top.cpp:40) on port 'gmem' (top.cpp:40) [29]  (8 ns)

 <State 7>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', top.cpp:40) on port 'gmem' (top.cpp:40) [29]  (8 ns)

 <State 8>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', top.cpp:40) on port 'gmem' (top.cpp:40) [29]  (8 ns)

 <State 9>: 8ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read', top.cpp:40) on port 'gmem' (top.cpp:40) [30]  (8 ns)

 <State 10>: 4.14ns
The critical path consists of the following:
	'add' operation ('src_counter', top.cpp:44) [45]  (2.55 ns)
	'store' operation ('store_ln40', top.cpp:40) of variable 'src_counter', top.cpp:44 on local variable 'src_counter' [47]  (1.59 ns)

 <State 11>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', top.cpp:42) on port 'gmem' (top.cpp:42) [40]  (8 ns)

 <State 12>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', top.cpp:42) on port 'gmem' (top.cpp:42) [40]  (8 ns)

 <State 13>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', top.cpp:42) on port 'gmem' (top.cpp:42) [40]  (8 ns)

 <State 14>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', top.cpp:42) on port 'gmem' (top.cpp:42) [40]  (8 ns)

 <State 15>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', top.cpp:42) on port 'gmem' (top.cpp:42) [40]  (8 ns)

 <State 16>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', top.cpp:42) on port 'gmem' (top.cpp:42) [40]  (8 ns)

 <State 17>: 8ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', top.cpp:42) on port 'gmem' (top.cpp:42) [40]  (8 ns)

 <State 18>: 8ns
The critical path consists of the following:
	bus read operation ('gmem_addr_1_read', top.cpp:42) on port 'gmem' (top.cpp:42) [41]  (8 ns)

 <State 19>: 4.14ns
The critical path consists of the following:
	'load' operation ('total_length_load', top.cpp:43) on local variable 'total_length' [35]  (0 ns)
	'add' operation ('total_length', top.cpp:43) [44]  (2.55 ns)
	'store' operation ('store_ln40', top.cpp:40) of variable 'total_length', top.cpp:43 on local variable 'total_length' [46]  (1.59 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
